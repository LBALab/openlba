# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.26

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.26.1/bin/cmake

# The command to remove a file.
RM = /usr/local/Cellar/cmake/3.26.1/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/Cellar/cmake/3.26.1/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/Cellar/cmake/3.26.1/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(CMAKE_COMMAND) -E cmake_progress_start /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87/CMakeFiles /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87/SOURCES//CMakeFiles/progress.marks
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SOURCES/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SOURCES/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SOURCES/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SOURCES/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
SOURCES/CMakeFiles/lba2.dir/rule:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 SOURCES/CMakeFiles/lba2.dir/rule
.PHONY : SOURCES/CMakeFiles/lba2.dir/rule

# Convenience name for target.
lba2: SOURCES/CMakeFiles/lba2.dir/rule
.PHONY : lba2

# fast build rule for target.
lba2/fast:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/build
.PHONY : lba2/fast

AMBIANCE.o: AMBIANCE.CPP.o
.PHONY : AMBIANCE.o

# target to build an object file
AMBIANCE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/AMBIANCE.CPP.o
.PHONY : AMBIANCE.CPP.o

AMBIANCE.i: AMBIANCE.CPP.i
.PHONY : AMBIANCE.i

# target to preprocess a source file
AMBIANCE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/AMBIANCE.CPP.i
.PHONY : AMBIANCE.CPP.i

AMBIANCE.s: AMBIANCE.CPP.s
.PHONY : AMBIANCE.s

# target to generate assembly for a file
AMBIANCE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/AMBIANCE.CPP.s
.PHONY : AMBIANCE.CPP.s

ANIMTEX.o: ANIMTEX.CPP.o
.PHONY : ANIMTEX.o

# target to build an object file
ANIMTEX.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ANIMTEX.CPP.o
.PHONY : ANIMTEX.CPP.o

ANIMTEX.i: ANIMTEX.CPP.i
.PHONY : ANIMTEX.i

# target to preprocess a source file
ANIMTEX.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ANIMTEX.CPP.i
.PHONY : ANIMTEX.CPP.i

ANIMTEX.s: ANIMTEX.CPP.s
.PHONY : ANIMTEX.s

# target to generate assembly for a file
ANIMTEX.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ANIMTEX.CPP.s
.PHONY : ANIMTEX.CPP.s

BEZIER.o: BEZIER.CPP.o
.PHONY : BEZIER.o

# target to build an object file
BEZIER.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BEZIER.CPP.o
.PHONY : BEZIER.CPP.o

BEZIER.i: BEZIER.CPP.i
.PHONY : BEZIER.i

# target to preprocess a source file
BEZIER.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BEZIER.CPP.i
.PHONY : BEZIER.CPP.i

BEZIER.s: BEZIER.CPP.s
.PHONY : BEZIER.s

# target to generate assembly for a file
BEZIER.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BEZIER.CPP.s
.PHONY : BEZIER.CPP.s

BUGGY.o: BUGGY.CPP.o
.PHONY : BUGGY.o

# target to build an object file
BUGGY.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BUGGY.CPP.o
.PHONY : BUGGY.CPP.o

BUGGY.i: BUGGY.CPP.i
.PHONY : BUGGY.i

# target to preprocess a source file
BUGGY.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BUGGY.CPP.i
.PHONY : BUGGY.CPP.i

BUGGY.s: BUGGY.CPP.s
.PHONY : BUGGY.s

# target to generate assembly for a file
BUGGY.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/BUGGY.CPP.s
.PHONY : BUGGY.CPP.s

CHEATCOD.o: CHEATCOD.CPP.o
.PHONY : CHEATCOD.o

# target to build an object file
CHEATCOD.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CHEATCOD.CPP.o
.PHONY : CHEATCOD.CPP.o

CHEATCOD.i: CHEATCOD.CPP.i
.PHONY : CHEATCOD.i

# target to preprocess a source file
CHEATCOD.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CHEATCOD.CPP.i
.PHONY : CHEATCOD.CPP.i

CHEATCOD.s: CHEATCOD.CPP.s
.PHONY : CHEATCOD.s

# target to generate assembly for a file
CHEATCOD.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CHEATCOD.CPP.s
.PHONY : CHEATCOD.CPP.s

COMPORTE.o: COMPORTE.CPP.o
.PHONY : COMPORTE.o

# target to build an object file
COMPORTE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPORTE.CPP.o
.PHONY : COMPORTE.CPP.o

COMPORTE.i: COMPORTE.CPP.i
.PHONY : COMPORTE.i

# target to preprocess a source file
COMPORTE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPORTE.CPP.i
.PHONY : COMPORTE.CPP.i

COMPORTE.s: COMPORTE.CPP.s
.PHONY : COMPORTE.s

# target to generate assembly for a file
COMPORTE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPORTE.CPP.s
.PHONY : COMPORTE.CPP.s

COMPRESS.o: COMPRESS.CPP.o
.PHONY : COMPRESS.o

# target to build an object file
COMPRESS.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPRESS.CPP.o
.PHONY : COMPRESS.CPP.o

COMPRESS.i: COMPRESS.CPP.i
.PHONY : COMPRESS.i

# target to preprocess a source file
COMPRESS.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPRESS.CPP.i
.PHONY : COMPRESS.CPP.i

COMPRESS.s: COMPRESS.CPP.s
.PHONY : COMPRESS.s

# target to generate assembly for a file
COMPRESS.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/COMPRESS.CPP.s
.PHONY : COMPRESS.CPP.s

CONFIG.o: CONFIG.CPP.o
.PHONY : CONFIG.o

# target to build an object file
CONFIG.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CONFIG.CPP.o
.PHONY : CONFIG.CPP.o

CONFIG.i: CONFIG.CPP.i
.PHONY : CONFIG.i

# target to preprocess a source file
CONFIG.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CONFIG.CPP.i
.PHONY : CONFIG.CPP.i

CONFIG.s: CONFIG.CPP.s
.PHONY : CONFIG.s

# target to generate assembly for a file
CONFIG.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CONFIG.CPP.s
.PHONY : CONFIG.CPP.s

CREDITS.o: CREDITS.CPP.o
.PHONY : CREDITS.o

# target to build an object file
CREDITS.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CREDITS.CPP.o
.PHONY : CREDITS.CPP.o

CREDITS.i: CREDITS.CPP.i
.PHONY : CREDITS.i

# target to preprocess a source file
CREDITS.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CREDITS.CPP.i
.PHONY : CREDITS.CPP.i

CREDITS.s: CREDITS.CPP.s
.PHONY : CREDITS.s

# target to generate assembly for a file
CREDITS.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/CREDITS.CPP.s
.PHONY : CREDITS.CPP.s

DART.o: DART.CPP.o
.PHONY : DART.o

# target to build an object file
DART.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DART.CPP.o
.PHONY : DART.CPP.o

DART.i: DART.CPP.i
.PHONY : DART.i

# target to preprocess a source file
DART.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DART.CPP.i
.PHONY : DART.CPP.i

DART.s: DART.CPP.s
.PHONY : DART.s

# target to generate assembly for a file
DART.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DART.CPP.s
.PHONY : DART.CPP.s

DIRECTORIES.o: DIRECTORIES.CPP.o
.PHONY : DIRECTORIES.o

# target to build an object file
DIRECTORIES.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DIRECTORIES.CPP.o
.PHONY : DIRECTORIES.CPP.o

DIRECTORIES.i: DIRECTORIES.CPP.i
.PHONY : DIRECTORIES.i

# target to preprocess a source file
DIRECTORIES.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DIRECTORIES.CPP.i
.PHONY : DIRECTORIES.CPP.i

DIRECTORIES.s: DIRECTORIES.CPP.s
.PHONY : DIRECTORIES.s

# target to generate assembly for a file
DIRECTORIES.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DIRECTORIES.CPP.s
.PHONY : DIRECTORIES.CPP.s

DISKFUNC.o: DISKFUNC.CPP.o
.PHONY : DISKFUNC.o

# target to build an object file
DISKFUNC.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DISKFUNC.CPP.o
.PHONY : DISKFUNC.CPP.o

DISKFUNC.i: DISKFUNC.CPP.i
.PHONY : DISKFUNC.i

# target to preprocess a source file
DISKFUNC.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DISKFUNC.CPP.i
.PHONY : DISKFUNC.CPP.i

DISKFUNC.s: DISKFUNC.CPP.s
.PHONY : DISKFUNC.s

# target to generate assembly for a file
DISKFUNC.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/DISKFUNC.CPP.s
.PHONY : DISKFUNC.CPP.s

EXTFUNC.o: EXTFUNC.CPP.o
.PHONY : EXTFUNC.o

# target to build an object file
EXTFUNC.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTFUNC.CPP.o
.PHONY : EXTFUNC.CPP.o

EXTFUNC.i: EXTFUNC.CPP.i
.PHONY : EXTFUNC.i

# target to preprocess a source file
EXTFUNC.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTFUNC.CPP.i
.PHONY : EXTFUNC.CPP.i

EXTFUNC.s: EXTFUNC.CPP.s
.PHONY : EXTFUNC.s

# target to generate assembly for a file
EXTFUNC.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTFUNC.CPP.s
.PHONY : EXTFUNC.CPP.s

EXTRA.o: EXTRA.CPP.o
.PHONY : EXTRA.o

# target to build an object file
EXTRA.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTRA.CPP.o
.PHONY : EXTRA.CPP.o

EXTRA.i: EXTRA.CPP.i
.PHONY : EXTRA.i

# target to preprocess a source file
EXTRA.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTRA.CPP.i
.PHONY : EXTRA.CPP.i

EXTRA.s: EXTRA.CPP.s
.PHONY : EXTRA.s

# target to generate assembly for a file
EXTRA.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/EXTRA.CPP.s
.PHONY : EXTRA.CPP.s

FICHE.o: FICHE.CPP.o
.PHONY : FICHE.o

# target to build an object file
FICHE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FICHE.CPP.o
.PHONY : FICHE.CPP.o

FICHE.i: FICHE.CPP.i
.PHONY : FICHE.i

# target to preprocess a source file
FICHE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FICHE.CPP.i
.PHONY : FICHE.CPP.i

FICHE.s: FICHE.CPP.s
.PHONY : FICHE.s

# target to generate assembly for a file
FICHE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FICHE.CPP.s
.PHONY : FICHE.CPP.s

FIRE.o: FIRE.CPP.o
.PHONY : FIRE.o

# target to build an object file
FIRE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FIRE.CPP.o
.PHONY : FIRE.CPP.o

FIRE.i: FIRE.CPP.i
.PHONY : FIRE.i

# target to preprocess a source file
FIRE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FIRE.CPP.i
.PHONY : FIRE.CPP.i

FIRE.s: FIRE.CPP.s
.PHONY : FIRE.s

# target to generate assembly for a file
FIRE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FIRE.CPP.s
.PHONY : FIRE.CPP.s

FLOW.o: FLOW.CPP.o
.PHONY : FLOW.o

# target to build an object file
FLOW.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW.CPP.o
.PHONY : FLOW.CPP.o

FLOW.i: FLOW.CPP.i
.PHONY : FLOW.i

# target to preprocess a source file
FLOW.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW.CPP.i
.PHONY : FLOW.CPP.i

FLOW.s: FLOW.CPP.s
.PHONY : FLOW.s

# target to generate assembly for a file
FLOW.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW.CPP.s
.PHONY : FLOW.CPP.s

FLOW_A.o: FLOW_A.CPP.o
.PHONY : FLOW_A.o

# target to build an object file
FLOW_A.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW_A.CPP.o
.PHONY : FLOW_A.CPP.o

FLOW_A.i: FLOW_A.CPP.i
.PHONY : FLOW_A.i

# target to preprocess a source file
FLOW_A.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW_A.CPP.i
.PHONY : FLOW_A.CPP.i

FLOW_A.s: FLOW_A.CPP.s
.PHONY : FLOW_A.s

# target to generate assembly for a file
FLOW_A.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FLOW_A.CPP.s
.PHONY : FLOW_A.CPP.s

FUNC.o: FUNC.CPP.o
.PHONY : FUNC.o

# target to build an object file
FUNC.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FUNC.CPP.o
.PHONY : FUNC.CPP.o

FUNC.i: FUNC.CPP.i
.PHONY : FUNC.i

# target to preprocess a source file
FUNC.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FUNC.CPP.i
.PHONY : FUNC.CPP.i

FUNC.s: FUNC.CPP.s
.PHONY : FUNC.s

# target to generate assembly for a file
FUNC.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/FUNC.CPP.s
.PHONY : FUNC.CPP.s

GAMEMENU.o: GAMEMENU.CPP.o
.PHONY : GAMEMENU.o

# target to build an object file
GAMEMENU.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GAMEMENU.CPP.o
.PHONY : GAMEMENU.CPP.o

GAMEMENU.i: GAMEMENU.CPP.i
.PHONY : GAMEMENU.i

# target to preprocess a source file
GAMEMENU.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GAMEMENU.CPP.i
.PHONY : GAMEMENU.CPP.i

GAMEMENU.s: GAMEMENU.CPP.s
.PHONY : GAMEMENU.s

# target to generate assembly for a file
GAMEMENU.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GAMEMENU.CPP.s
.PHONY : GAMEMENU.CPP.s

GERELIFE.o: GERELIFE.CPP.o
.PHONY : GERELIFE.o

# target to build an object file
GERELIFE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERELIFE.CPP.o
.PHONY : GERELIFE.CPP.o

GERELIFE.i: GERELIFE.CPP.i
.PHONY : GERELIFE.i

# target to preprocess a source file
GERELIFE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERELIFE.CPP.i
.PHONY : GERELIFE.CPP.i

GERELIFE.s: GERELIFE.CPP.s
.PHONY : GERELIFE.s

# target to generate assembly for a file
GERELIFE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERELIFE.CPP.s
.PHONY : GERELIFE.CPP.s

GERETRAK.o: GERETRAK.CPP.o
.PHONY : GERETRAK.o

# target to build an object file
GERETRAK.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERETRAK.CPP.o
.PHONY : GERETRAK.CPP.o

GERETRAK.i: GERETRAK.CPP.i
.PHONY : GERETRAK.i

# target to preprocess a source file
GERETRAK.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERETRAK.CPP.i
.PHONY : GERETRAK.CPP.i

GERETRAK.s: GERETRAK.CPP.s
.PHONY : GERETRAK.s

# target to generate assembly for a file
GERETRAK.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GERETRAK.CPP.s
.PHONY : GERETRAK.CPP.s

GLOBAL.o: GLOBAL.CPP.o
.PHONY : GLOBAL.o

# target to build an object file
GLOBAL.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GLOBAL.CPP.o
.PHONY : GLOBAL.CPP.o

GLOBAL.i: GLOBAL.CPP.i
.PHONY : GLOBAL.i

# target to preprocess a source file
GLOBAL.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GLOBAL.CPP.i
.PHONY : GLOBAL.CPP.i

GLOBAL.s: GLOBAL.CPP.s
.PHONY : GLOBAL.s

# target to generate assembly for a file
GLOBAL.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GLOBAL.CPP.s
.PHONY : GLOBAL.CPP.s

GRILLE.o: GRILLE.CPP.o
.PHONY : GRILLE.o

# target to build an object file
GRILLE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE.CPP.o
.PHONY : GRILLE.CPP.o

GRILLE.i: GRILLE.CPP.i
.PHONY : GRILLE.i

# target to preprocess a source file
GRILLE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE.CPP.i
.PHONY : GRILLE.CPP.i

GRILLE.s: GRILLE.CPP.s
.PHONY : GRILLE.s

# target to generate assembly for a file
GRILLE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE.CPP.s
.PHONY : GRILLE.CPP.s

GRILLE_A.o: GRILLE_A.CPP.o
.PHONY : GRILLE_A.o

# target to build an object file
GRILLE_A.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE_A.CPP.o
.PHONY : GRILLE_A.CPP.o

GRILLE_A.i: GRILLE_A.CPP.i
.PHONY : GRILLE_A.i

# target to preprocess a source file
GRILLE_A.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE_A.CPP.i
.PHONY : GRILLE_A.CPP.i

GRILLE_A.s: GRILLE_A.CPP.s
.PHONY : GRILLE_A.s

# target to generate assembly for a file
GRILLE_A.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/GRILLE_A.CPP.s
.PHONY : GRILLE_A.CPP.s

HOLOBODY.o: HOLOBODY.CPP.o
.PHONY : HOLOBODY.o

# target to build an object file
HOLOBODY.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOBODY.CPP.o
.PHONY : HOLOBODY.CPP.o

HOLOBODY.i: HOLOBODY.CPP.i
.PHONY : HOLOBODY.i

# target to preprocess a source file
HOLOBODY.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOBODY.CPP.i
.PHONY : HOLOBODY.CPP.i

HOLOBODY.s: HOLOBODY.CPP.s
.PHONY : HOLOBODY.s

# target to generate assembly for a file
HOLOBODY.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOBODY.CPP.s
.PHONY : HOLOBODY.CPP.s

HOLOGLOB.o: HOLOGLOB.CPP.o
.PHONY : HOLOGLOB.o

# target to build an object file
HOLOGLOB.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOGLOB.CPP.o
.PHONY : HOLOGLOB.CPP.o

HOLOGLOB.i: HOLOGLOB.CPP.i
.PHONY : HOLOGLOB.i

# target to preprocess a source file
HOLOGLOB.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOGLOB.CPP.i
.PHONY : HOLOGLOB.CPP.i

HOLOGLOB.s: HOLOGLOB.CPP.s
.PHONY : HOLOGLOB.s

# target to generate assembly for a file
HOLOGLOB.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOGLOB.CPP.s
.PHONY : HOLOGLOB.CPP.s

HOLOPLAN.o: HOLOPLAN.CPP.o
.PHONY : HOLOPLAN.o

# target to build an object file
HOLOPLAN.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOPLAN.CPP.o
.PHONY : HOLOPLAN.CPP.o

HOLOPLAN.i: HOLOPLAN.CPP.i
.PHONY : HOLOPLAN.i

# target to preprocess a source file
HOLOPLAN.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOPLAN.CPP.i
.PHONY : HOLOPLAN.CPP.i

HOLOPLAN.s: HOLOPLAN.CPP.s
.PHONY : HOLOPLAN.s

# target to generate assembly for a file
HOLOPLAN.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/HOLOPLAN.CPP.s
.PHONY : HOLOPLAN.CPP.s

IMPACT.o: IMPACT.CPP.o
.PHONY : IMPACT.o

# target to build an object file
IMPACT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/IMPACT.CPP.o
.PHONY : IMPACT.CPP.o

IMPACT.i: IMPACT.CPP.i
.PHONY : IMPACT.i

# target to preprocess a source file
IMPACT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/IMPACT.CPP.i
.PHONY : IMPACT.CPP.i

IMPACT.s: IMPACT.CPP.s
.PHONY : IMPACT.s

# target to generate assembly for a file
IMPACT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/IMPACT.CPP.s
.PHONY : IMPACT.CPP.s

INCRUST.o: INCRUST.CPP.o
.PHONY : INCRUST.o

# target to build an object file
INCRUST.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INCRUST.CPP.o
.PHONY : INCRUST.CPP.o

INCRUST.i: INCRUST.CPP.i
.PHONY : INCRUST.i

# target to preprocess a source file
INCRUST.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INCRUST.CPP.i
.PHONY : INCRUST.CPP.i

INCRUST.s: INCRUST.CPP.s
.PHONY : INCRUST.s

# target to generate assembly for a file
INCRUST.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INCRUST.CPP.s
.PHONY : INCRUST.CPP.s

INITADEL.o: INITADEL.C.o
.PHONY : INITADEL.o

# target to build an object file
INITADEL.C.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INITADEL.C.o
.PHONY : INITADEL.C.o

INITADEL.i: INITADEL.C.i
.PHONY : INITADEL.i

# target to preprocess a source file
INITADEL.C.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INITADEL.C.i
.PHONY : INITADEL.C.i

INITADEL.s: INITADEL.C.s
.PHONY : INITADEL.s

# target to generate assembly for a file
INITADEL.C.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INITADEL.C.s
.PHONY : INITADEL.C.s

INPUT.o: INPUT.CPP.o
.PHONY : INPUT.o

# target to build an object file
INPUT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INPUT.CPP.o
.PHONY : INPUT.CPP.o

INPUT.i: INPUT.CPP.i
.PHONY : INPUT.i

# target to preprocess a source file
INPUT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INPUT.CPP.i
.PHONY : INPUT.CPP.i

INPUT.s: INPUT.CPP.s
.PHONY : INPUT.s

# target to generate assembly for a file
INPUT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INPUT.CPP.s
.PHONY : INPUT.CPP.s

INTEXT.o: INTEXT.CPP.o
.PHONY : INTEXT.o

# target to build an object file
INTEXT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INTEXT.CPP.o
.PHONY : INTEXT.CPP.o

INTEXT.i: INTEXT.CPP.i
.PHONY : INTEXT.i

# target to preprocess a source file
INTEXT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INTEXT.CPP.i
.PHONY : INTEXT.CPP.i

INTEXT.s: INTEXT.CPP.s
.PHONY : INTEXT.s

# target to generate assembly for a file
INTEXT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INTEXT.CPP.s
.PHONY : INTEXT.CPP.s

INVENT.o: INVENT.CPP.o
.PHONY : INVENT.o

# target to build an object file
INVENT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INVENT.CPP.o
.PHONY : INVENT.CPP.o

INVENT.i: INVENT.CPP.i
.PHONY : INVENT.i

# target to preprocess a source file
INVENT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INVENT.CPP.i
.PHONY : INVENT.CPP.i

INVENT.s: INVENT.CPP.s
.PHONY : INVENT.s

# target to generate assembly for a file
INVENT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/INVENT.CPP.s
.PHONY : INVENT.CPP.s

JOYSTICK.o: JOYSTICK.CPP.o
.PHONY : JOYSTICK.o

# target to build an object file
JOYSTICK.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/JOYSTICK.CPP.o
.PHONY : JOYSTICK.CPP.o

JOYSTICK.i: JOYSTICK.CPP.i
.PHONY : JOYSTICK.i

# target to preprocess a source file
JOYSTICK.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/JOYSTICK.CPP.i
.PHONY : JOYSTICK.CPP.i

JOYSTICK.s: JOYSTICK.CPP.s
.PHONY : JOYSTICK.s

# target to generate assembly for a file
JOYSTICK.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/JOYSTICK.CPP.s
.PHONY : JOYSTICK.CPP.s

LZSS.o: LZSS.CPP.o
.PHONY : LZSS.o

# target to build an object file
LZSS.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/LZSS.CPP.o
.PHONY : LZSS.CPP.o

LZSS.i: LZSS.CPP.i
.PHONY : LZSS.i

# target to preprocess a source file
LZSS.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/LZSS.CPP.i
.PHONY : LZSS.CPP.i

LZSS.s: LZSS.CPP.s
.PHONY : LZSS.s

# target to generate assembly for a file
LZSS.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/LZSS.CPP.s
.PHONY : LZSS.CPP.s

MEM.o: MEM.CPP.o
.PHONY : MEM.o

# target to build an object file
MEM.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MEM.CPP.o
.PHONY : MEM.CPP.o

MEM.i: MEM.CPP.i
.PHONY : MEM.i

# target to preprocess a source file
MEM.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MEM.CPP.i
.PHONY : MEM.CPP.i

MEM.s: MEM.CPP.s
.PHONY : MEM.s

# target to generate assembly for a file
MEM.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MEM.CPP.s
.PHONY : MEM.CPP.s

MESSAGE.o: MESSAGE.CPP.o
.PHONY : MESSAGE.o

# target to build an object file
MESSAGE.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MESSAGE.CPP.o
.PHONY : MESSAGE.CPP.o

MESSAGE.i: MESSAGE.CPP.i
.PHONY : MESSAGE.i

# target to preprocess a source file
MESSAGE.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MESSAGE.CPP.i
.PHONY : MESSAGE.CPP.i

MESSAGE.s: MESSAGE.CPP.s
.PHONY : MESSAGE.s

# target to generate assembly for a file
MESSAGE.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MESSAGE.CPP.s
.PHONY : MESSAGE.CPP.s

MUSIC.o: MUSIC.CPP.o
.PHONY : MUSIC.o

# target to build an object file
MUSIC.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MUSIC.CPP.o
.PHONY : MUSIC.CPP.o

MUSIC.i: MUSIC.CPP.i
.PHONY : MUSIC.i

# target to preprocess a source file
MUSIC.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MUSIC.CPP.i
.PHONY : MUSIC.CPP.i

MUSIC.s: MUSIC.CPP.s
.PHONY : MUSIC.s

# target to generate assembly for a file
MUSIC.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/MUSIC.CPP.s
.PHONY : MUSIC.CPP.s

OBJECT.o: OBJECT.CPP.o
.PHONY : OBJECT.o

# target to build an object file
OBJECT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/OBJECT.CPP.o
.PHONY : OBJECT.CPP.o

OBJECT.i: OBJECT.CPP.i
.PHONY : OBJECT.i

# target to preprocess a source file
OBJECT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/OBJECT.CPP.i
.PHONY : OBJECT.CPP.i

OBJECT.s: OBJECT.CPP.s
.PHONY : OBJECT.s

# target to generate assembly for a file
OBJECT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/OBJECT.CPP.s
.PHONY : OBJECT.CPP.s

PATCH.o: PATCH.CPP.o
.PHONY : PATCH.o

# target to build an object file
PATCH.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PATCH.CPP.o
.PHONY : PATCH.CPP.o

PATCH.i: PATCH.CPP.i
.PHONY : PATCH.i

# target to preprocess a source file
PATCH.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PATCH.CPP.i
.PHONY : PATCH.CPP.i

PATCH.s: PATCH.CPP.s
.PHONY : PATCH.s

# target to generate assembly for a file
PATCH.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PATCH.CPP.s
.PHONY : PATCH.CPP.s

PERSO.o: PERSO.CPP.o
.PHONY : PERSO.o

# target to build an object file
PERSO.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PERSO.CPP.o
.PHONY : PERSO.CPP.o

PERSO.i: PERSO.CPP.i
.PHONY : PERSO.i

# target to preprocess a source file
PERSO.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PERSO.CPP.i
.PHONY : PERSO.CPP.i

PERSO.s: PERSO.CPP.s
.PHONY : PERSO.s

# target to generate assembly for a file
PERSO.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PERSO.CPP.s
.PHONY : PERSO.CPP.s

PLASMA.o: PLASMA.CPP.o
.PHONY : PLASMA.o

# target to build an object file
PLASMA.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLASMA.CPP.o
.PHONY : PLASMA.CPP.o

PLASMA.i: PLASMA.CPP.i
.PHONY : PLASMA.i

# target to preprocess a source file
PLASMA.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLASMA.CPP.i
.PHONY : PLASMA.CPP.i

PLASMA.s: PLASMA.CPP.s
.PHONY : PLASMA.s

# target to generate assembly for a file
PLASMA.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLASMA.CPP.s
.PHONY : PLASMA.CPP.s

PLAYACF.o: PLAYACF.CPP.o
.PHONY : PLAYACF.o

# target to build an object file
PLAYACF.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLAYACF.CPP.o
.PHONY : PLAYACF.CPP.o

PLAYACF.i: PLAYACF.CPP.i
.PHONY : PLAYACF.i

# target to preprocess a source file
PLAYACF.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLAYACF.CPP.i
.PHONY : PLAYACF.CPP.i

PLAYACF.s: PLAYACF.CPP.s
.PHONY : PLAYACF.s

# target to generate assembly for a file
PLAYACF.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/PLAYACF.CPP.s
.PHONY : PLAYACF.CPP.s

POF.o: POF.CPP.o
.PHONY : POF.o

# target to build an object file
POF.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/POF.CPP.o
.PHONY : POF.CPP.o

POF.i: POF.CPP.i
.PHONY : POF.i

# target to preprocess a source file
POF.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/POF.CPP.i
.PHONY : POF.CPP.i

POF.s: POF.CPP.s
.PHONY : POF.s

# target to generate assembly for a file
POF.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/POF.CPP.s
.PHONY : POF.CPP.s

RAIN.o: RAIN.CPP.o
.PHONY : RAIN.o

# target to build an object file
RAIN.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/RAIN.CPP.o
.PHONY : RAIN.CPP.o

RAIN.i: RAIN.CPP.i
.PHONY : RAIN.i

# target to preprocess a source file
RAIN.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/RAIN.CPP.i
.PHONY : RAIN.CPP.i

RAIN.s: RAIN.CPP.s
.PHONY : RAIN.s

# target to generate assembly for a file
RAIN.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/RAIN.CPP.s
.PHONY : RAIN.CPP.s

SAVEGAME.o: SAVEGAME.CPP.o
.PHONY : SAVEGAME.o

# target to build an object file
SAVEGAME.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SAVEGAME.CPP.o
.PHONY : SAVEGAME.CPP.o

SAVEGAME.i: SAVEGAME.CPP.i
.PHONY : SAVEGAME.i

# target to preprocess a source file
SAVEGAME.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SAVEGAME.CPP.i
.PHONY : SAVEGAME.CPP.i

SAVEGAME.s: SAVEGAME.CPP.s
.PHONY : SAVEGAME.s

# target to generate assembly for a file
SAVEGAME.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SAVEGAME.CPP.s
.PHONY : SAVEGAME.CPP.s

SCAN.o: SCAN.CPP.o
.PHONY : SCAN.o

# target to build an object file
SCAN.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SCAN.CPP.o
.PHONY : SCAN.CPP.o

SCAN.i: SCAN.CPP.i
.PHONY : SCAN.i

# target to preprocess a source file
SCAN.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SCAN.CPP.i
.PHONY : SCAN.CPP.i

SCAN.s: SCAN.CPP.s
.PHONY : SCAN.s

# target to generate assembly for a file
SCAN.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SCAN.CPP.s
.PHONY : SCAN.CPP.s

SORT.o: SORT.CPP.o
.PHONY : SORT.o

# target to build an object file
SORT.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SORT.CPP.o
.PHONY : SORT.CPP.o

SORT.i: SORT.CPP.i
.PHONY : SORT.i

# target to preprocess a source file
SORT.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SORT.CPP.i
.PHONY : SORT.CPP.i

SORT.s: SORT.CPP.s
.PHONY : SORT.s

# target to generate assembly for a file
SORT.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/SORT.CPP.s
.PHONY : SORT.CPP.s

VALIDPOS.o: VALIDPOS.CPP.o
.PHONY : VALIDPOS.o

# target to build an object file
VALIDPOS.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VALIDPOS.CPP.o
.PHONY : VALIDPOS.CPP.o

VALIDPOS.i: VALIDPOS.CPP.i
.PHONY : VALIDPOS.i

# target to preprocess a source file
VALIDPOS.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VALIDPOS.CPP.i
.PHONY : VALIDPOS.CPP.i

VALIDPOS.s: VALIDPOS.CPP.s
.PHONY : VALIDPOS.s

# target to generate assembly for a file
VALIDPOS.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VALIDPOS.CPP.s
.PHONY : VALIDPOS.CPP.s

VERSION.o: VERSION.CPP.o
.PHONY : VERSION.o

# target to build an object file
VERSION.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VERSION.CPP.o
.PHONY : VERSION.CPP.o

VERSION.i: VERSION.CPP.i
.PHONY : VERSION.i

# target to preprocess a source file
VERSION.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VERSION.CPP.i
.PHONY : VERSION.CPP.i

VERSION.s: VERSION.CPP.s
.PHONY : VERSION.s

# target to generate assembly for a file
VERSION.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/VERSION.CPP.s
.PHONY : VERSION.CPP.s

WAGON.o: WAGON.CPP.o
.PHONY : WAGON.o

# target to build an object file
WAGON.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/WAGON.CPP.o
.PHONY : WAGON.CPP.o

WAGON.i: WAGON.CPP.i
.PHONY : WAGON.i

# target to preprocess a source file
WAGON.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/WAGON.CPP.i
.PHONY : WAGON.CPP.i

WAGON.s: WAGON.CPP.s
.PHONY : WAGON.s

# target to generate assembly for a file
WAGON.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/WAGON.CPP.s
.PHONY : WAGON.CPP.s

ZV.o: ZV.CPP.o
.PHONY : ZV.o

# target to build an object file
ZV.CPP.o:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ZV.CPP.o
.PHONY : ZV.CPP.o

ZV.i: ZV.CPP.i
.PHONY : ZV.i

# target to preprocess a source file
ZV.CPP.i:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ZV.CPP.i
.PHONY : ZV.CPP.i

ZV.s: ZV.CPP.s
.PHONY : ZV.s

# target to generate assembly for a file
ZV.CPP.s:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(MAKE) $(MAKESILENT) -f SOURCES/CMakeFiles/lba2.dir/build.make SOURCES/CMakeFiles/lba2.dir/ZV.CPP.s
.PHONY : ZV.CPP.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... lba2"
	@echo "... AMBIANCE.o"
	@echo "... AMBIANCE.i"
	@echo "... AMBIANCE.s"
	@echo "... ANIMTEX.o"
	@echo "... ANIMTEX.i"
	@echo "... ANIMTEX.s"
	@echo "... BEZIER.o"
	@echo "... BEZIER.i"
	@echo "... BEZIER.s"
	@echo "... BUGGY.o"
	@echo "... BUGGY.i"
	@echo "... BUGGY.s"
	@echo "... CHEATCOD.o"
	@echo "... CHEATCOD.i"
	@echo "... CHEATCOD.s"
	@echo "... COMPORTE.o"
	@echo "... COMPORTE.i"
	@echo "... COMPORTE.s"
	@echo "... COMPRESS.o"
	@echo "... COMPRESS.i"
	@echo "... COMPRESS.s"
	@echo "... CONFIG.o"
	@echo "... CONFIG.i"
	@echo "... CONFIG.s"
	@echo "... CREDITS.o"
	@echo "... CREDITS.i"
	@echo "... CREDITS.s"
	@echo "... DART.o"
	@echo "... DART.i"
	@echo "... DART.s"
	@echo "... DIRECTORIES.o"
	@echo "... DIRECTORIES.i"
	@echo "... DIRECTORIES.s"
	@echo "... DISKFUNC.o"
	@echo "... DISKFUNC.i"
	@echo "... DISKFUNC.s"
	@echo "... EXTFUNC.o"
	@echo "... EXTFUNC.i"
	@echo "... EXTFUNC.s"
	@echo "... EXTRA.o"
	@echo "... EXTRA.i"
	@echo "... EXTRA.s"
	@echo "... FICHE.o"
	@echo "... FICHE.i"
	@echo "... FICHE.s"
	@echo "... FIRE.o"
	@echo "... FIRE.i"
	@echo "... FIRE.s"
	@echo "... FLOW.o"
	@echo "... FLOW.i"
	@echo "... FLOW.s"
	@echo "... FLOW_A.o"
	@echo "... FLOW_A.i"
	@echo "... FLOW_A.s"
	@echo "... FUNC.o"
	@echo "... FUNC.i"
	@echo "... FUNC.s"
	@echo "... GAMEMENU.o"
	@echo "... GAMEMENU.i"
	@echo "... GAMEMENU.s"
	@echo "... GERELIFE.o"
	@echo "... GERELIFE.i"
	@echo "... GERELIFE.s"
	@echo "... GERETRAK.o"
	@echo "... GERETRAK.i"
	@echo "... GERETRAK.s"
	@echo "... GLOBAL.o"
	@echo "... GLOBAL.i"
	@echo "... GLOBAL.s"
	@echo "... GRILLE.o"
	@echo "... GRILLE.i"
	@echo "... GRILLE.s"
	@echo "... GRILLE_A.o"
	@echo "... GRILLE_A.i"
	@echo "... GRILLE_A.s"
	@echo "... HOLOBODY.o"
	@echo "... HOLOBODY.i"
	@echo "... HOLOBODY.s"
	@echo "... HOLOGLOB.o"
	@echo "... HOLOGLOB.i"
	@echo "... HOLOGLOB.s"
	@echo "... HOLOPLAN.o"
	@echo "... HOLOPLAN.i"
	@echo "... HOLOPLAN.s"
	@echo "... IMPACT.o"
	@echo "... IMPACT.i"
	@echo "... IMPACT.s"
	@echo "... INCRUST.o"
	@echo "... INCRUST.i"
	@echo "... INCRUST.s"
	@echo "... INITADEL.o"
	@echo "... INITADEL.i"
	@echo "... INITADEL.s"
	@echo "... INPUT.o"
	@echo "... INPUT.i"
	@echo "... INPUT.s"
	@echo "... INTEXT.o"
	@echo "... INTEXT.i"
	@echo "... INTEXT.s"
	@echo "... INVENT.o"
	@echo "... INVENT.i"
	@echo "... INVENT.s"
	@echo "... JOYSTICK.o"
	@echo "... JOYSTICK.i"
	@echo "... JOYSTICK.s"
	@echo "... LZSS.o"
	@echo "... LZSS.i"
	@echo "... LZSS.s"
	@echo "... MEM.o"
	@echo "... MEM.i"
	@echo "... MEM.s"
	@echo "... MESSAGE.o"
	@echo "... MESSAGE.i"
	@echo "... MESSAGE.s"
	@echo "... MUSIC.o"
	@echo "... MUSIC.i"
	@echo "... MUSIC.s"
	@echo "... OBJECT.o"
	@echo "... OBJECT.i"
	@echo "... OBJECT.s"
	@echo "... PATCH.o"
	@echo "... PATCH.i"
	@echo "... PATCH.s"
	@echo "... PERSO.o"
	@echo "... PERSO.i"
	@echo "... PERSO.s"
	@echo "... PLASMA.o"
	@echo "... PLASMA.i"
	@echo "... PLASMA.s"
	@echo "... PLAYACF.o"
	@echo "... PLAYACF.i"
	@echo "... PLAYACF.s"
	@echo "... POF.o"
	@echo "... POF.i"
	@echo "... POF.s"
	@echo "... RAIN.o"
	@echo "... RAIN.i"
	@echo "... RAIN.s"
	@echo "... SAVEGAME.o"
	@echo "... SAVEGAME.i"
	@echo "... SAVEGAME.s"
	@echo "... SCAN.o"
	@echo "... SCAN.i"
	@echo "... SCAN.s"
	@echo "... SORT.o"
	@echo "... SORT.i"
	@echo "... SORT.s"
	@echo "... VALIDPOS.o"
	@echo "... VALIDPOS.i"
	@echo "... VALIDPOS.s"
	@echo "... VERSION.o"
	@echo "... VERSION.i"
	@echo "... VERSION.s"
	@echo "... WAGON.o"
	@echo "... WAGON.i"
	@echo "... WAGON.s"
	@echo "... ZV.o"
	@echo "... ZV.i"
	@echo "... ZV.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Users/xesf/Documents/workaround/github/lba2-classic-community-sergiou87 && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

